// <auto-generated />
using System;
using BlueBank.Domain.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlueBankAPI.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20211109183453_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BlueBank.Domain.Core.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<double>("Balance")
                        .HasColumnType("float")
                        .HasColumnName("ST_BALANCE");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_CREATED");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("ST_STATUS");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("ST_TYPE");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DT_UPDATED");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BlueBank.Domain.Core.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ID_ACCOUNT");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DT_ADDRESS");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ST_CPF");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ST_NAME");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ST_PHONE");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("BlueBank.Domain.Core.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DestinyClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DestinyClientId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("BlueBank.Domain.Core.Account", b =>
                {
                    b.HasOne("BlueBank.Domain.Core.Client", "Client")
                        .WithOne("Account")
                        .HasForeignKey("BlueBank.Domain.Core.Account", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("BlueBank.Domain.Core.Transaction", b =>
                {
                    b.HasOne("BlueBank.Domain.Core.Account", null)
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlueBank.Domain.Core.Client", "DestinyClient")
                        .WithMany()
                        .HasForeignKey("DestinyClientId");

                    b.Navigation("DestinyClient");
                });

            modelBuilder.Entity("BlueBank.Domain.Core.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("BlueBank.Domain.Core.Client", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
